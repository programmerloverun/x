(("undefined"!=typeof globalThis?globalThis:self)["makoChunk_@ant-design/x"]=("undefined"!=typeof globalThis?globalThis:self)["makoChunk_@ant-design/x"]||[]).push([["f5492103"],{f5492103:function(a,e,d){"use strict";d.d(e,"__esModule",{value:!0}),d.d(e,"texts",{enumerable:!0,get:function(){return t;}}),d("9d80190d");let t=[{value:"Initiate a fetch request to LLMs that comply with OpenAI standards.",paraId:0,tocIndex:0},{value:"Property",paraId:1,tocIndex:4},{value:"Description",paraId:1,tocIndex:4},{value:"Type",paraId:1,tocIndex:4},{value:"Default",paraId:1,tocIndex:4},{value:"Version",paraId:1,tocIndex:4},{value:"baseURL",paraId:1,tocIndex:4},{value:"Base URL for the API request",paraId:1,tocIndex:4},{value:"string",paraId:1,tocIndex:4},{value:"-",paraId:1,tocIndex:4},{value:"-",paraId:1,tocIndex:4},{value:"model",paraId:1,tocIndex:4},{value:"Model name, e.g., 'gpt-3.5-turbo'",paraId:1,tocIndex:4},{value:"string",paraId:1,tocIndex:4},{value:"-",paraId:1,tocIndex:4},{value:"-",paraId:1,tocIndex:4},{value:"dangerouslyApiKey",paraId:1,tocIndex:4},{value:"Enabling this option can be dangerous, exposing secret API credentials",paraId:1,tocIndex:4},{value:"string",paraId:1,tocIndex:4},{value:"-",paraId:1,tocIndex:4},{value:"-",paraId:1,tocIndex:4},{value:"fetch",paraId:1,tocIndex:4},{value:"Optional custom fetch function for making requests",paraId:1,tocIndex:4},{value:"fetch",paraId:1,tocIndex:4},{value:"-",paraId:1,tocIndex:4},{value:"-",paraId:1,tocIndex:4},{value:"type XRequestFunction<Input = Record<PropertyKey, any>, Output = Record<string, string>> = (\n  params: XRequestParams & Input,\n  callbacks: XRequestCallbacks<Output>,\n  transformStream?: XStreamOptions<Output>['transformStream'],\n) => Promise<void>;\n",paraId:2,tocIndex:5},{value:"Property",paraId:3,tocIndex:6},{value:"Description",paraId:3,tocIndex:6},{value:"Type",paraId:3,tocIndex:6},{value:"Default",paraId:3,tocIndex:6},{value:"Version",paraId:3,tocIndex:6},{value:"model",paraId:3,tocIndex:6},{value:"The model to be used for generating responses.",paraId:3,tocIndex:6},{value:"string",paraId:3,tocIndex:6},{value:"-",paraId:3,tocIndex:6},{value:"-",paraId:3,tocIndex:6},{value:"messages",paraId:3,tocIndex:6},{value:"An array of message objects, each containing a role and content.",paraId:3,tocIndex:6},{value:"Record<PropertyKey, any>[]",paraId:3,tocIndex:6},{value:"-",paraId:3,tocIndex:6},{value:"-",paraId:3,tocIndex:6},{value:"stream",paraId:3,tocIndex:6},{value:"Indicates whether to use streaming for the response.",paraId:3,tocIndex:6},{value:"boolean",paraId:3,tocIndex:6},{value:"false",paraId:3,tocIndex:6},{value:"-",paraId:3,tocIndex:6},{value:"Property",paraId:4,tocIndex:7},{value:"Description",paraId:4,tocIndex:7},{value:"Type",paraId:4,tocIndex:7},{value:"Default",paraId:4,tocIndex:7},{value:"Version",paraId:4,tocIndex:7},{value:"onSuccess",paraId:4,tocIndex:7},{value:"Callback for successful.",paraId:4,tocIndex:7},{value:"(messages: Output[]) => void",paraId:4,tocIndex:7},{value:"-",paraId:4,tocIndex:7},{value:"-",paraId:4,tocIndex:7},{value:"onError",paraId:4,tocIndex:7},{value:"Callback for error handling.",paraId:4,tocIndex:7},{value:"(error: Error) => void",paraId:4,tocIndex:7},{value:"-",paraId:4,tocIndex:7},{value:"-",paraId:4,tocIndex:7},{value:"onUpdate",paraId:4,tocIndex:7},{value:"Callback for message updates.",paraId:4,tocIndex:7},{value:"(message: Output) => void",paraId:4,tocIndex:7},{value:"-",paraId:4,tocIndex:7},{value:"-",paraId:4,tocIndex:7},{value:"transformStream",paraId:4,tocIndex:7},{value:"Optional transform function for processing stream data",paraId:4,tocIndex:7},{value:"XStreamOptions<Output>['transformStream']",paraId:4,tocIndex:7},{value:"-",paraId:4,tocIndex:7},{value:"-",paraId:4,tocIndex:7}];}}]);
//# sourceMappingURL=f5492103-async.3982ede9.js.map