{"version":3,"sources":["docs/react/model-use-openai.zh-CN.md?type=text"],"sourcesContent":["\n  import '/Users/elvislee/Desktop/antd-workplace/x/docs/react/model-use-openai.zh-CN.md?watch=parent';\n  export const texts = [{\"value\":\"通常情况 openai-node 用于 node 环境，如果在浏览器环境使用，需要开启 \",\"paraId\":0},{\"value\":\"dangerouslyAllowBrowser\",\"paraId\":0},{\"value\":\"。\",\"paraId\":0},{\"value\":\"import { useXAgent, useXChat, Sender } from '@ant-design/x';\\nimport OpenAI from 'openai';\\n\\nconst client = new OpenAI({\\n  apiKey: process.env['OPENAI_API_KEY'],\\n  dangerouslyAllowBrowser: true,\\n});\\n\\n// react env ...\\nconst [agent] = useXAgent({\\n  request: async (info, callbacks) => {\\n    const stream = await client.chat.completions.create({\\n      model: 'gpt-4o',\\n      messages: [{ role: 'user', content: 'Say this is a test' }],\\n      stream: true,\\n    });\\n\\n    for await (const chunk of stream) {\\n      // 调用回调\\n      callbacks.onUpdate(chunk.choices[0]?.delta?.content || '');\\n    }\\n  },\\n});\\n\\nconst {\\n  // 用于发起对话请求\\n  onRequest,\\n  // 用于绑定视图\\n  messages,\\n} = useXChat({ agent });\\n\\nconst items = messages.map((i) => ({\\n  content: message,\\n}));\\n\\nreturn (\\n  <div>\\n    <Bubble.List items={items} />\\n    <Sender onSubmit={onRequest} />\\n  </div>\\n);\\n\",\"paraId\":1,\"tocIndex\":0},{\"value\":\"参考 \",\"paraId\":2,\"tocIndex\":1},{\"value\":\"接入兼容 OpenAI 的模型推理服务\",\"paraId\":3,\"tocIndex\":1}];\n  "],"names":[],"mappings":"+PAEe,6CAAA,QADN,YACA,IAAM,EAAQ,CAAC,CAAC,MAAQ,uKAA+C,OAAS,CAAC,EAAE,CAAC,MAAQ,0BAA0B,OAAS,CAAC,EAAE,CAAC,MAAQ,SAAI,OAAS,CAAC,EAAE,CAAC,MAAQ,i9BAAu3B,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,gBAAM,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,6EAAsB,OAAS,EAAE,SAAW,CAAC,EAAE"}