{"version":3,"sources":["components/conversations/demo/infinite-load.tsx?techStack=react","components/conversations/demo/controlled-mode.tsx?techStack=react","components/conversations/demo/group.tsx?techStack=react","components/conversations/demo/with-menu.tsx?techStack=react","components/conversations/demo/group-sort.tsx?techStack=react","components/conversations/demo/basic.tsx?techStack=react"],"sourcesContent":["import '/Users/elvislee/Desktop/antd-workplace/x/components/conversations/demo/infinite-load.tsx?watch=parent';import React, { useEffect, useState } from 'react';\nimport { Conversations, type ConversationsProps } from '@ant-design/x';\nimport { Avatar, Divider, Spin, Card, type GetProp } from 'antd';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { RedoOutlined } from '@ant-design/icons';\n\nconst App: React.FC = () => {\n  const [loading, setLoading] = useState(false);\n  const [data, setData] = useState<GetProp<ConversationsProps, 'items'>>([]);\n\n  const loadMoreData = () => {\n    if (loading) {\n      return;\n    }\n    setLoading(true);\n    fetch('https://randomuser.me/api/?results=10&inc=name,gender,email,nat,picture&noinfo')\n      .then((res) => res.json())\n      .then((body) => {\n        const formmatedData = body.results.map((i: any) => ({\n          key: i.email,\n          label: `${i.name.title} ${i.name.first} ${i.name.last}`,\n          icon: <Avatar src={i.picture.thumbnail} />,\n          group: i.nat,\n        }));\n\n        setData([...data, ...formmatedData]);\n        setLoading(false);\n      })\n      .catch(() => {\n        setLoading(false);\n      });\n  };\n\n  useEffect(() => {\n    loadMoreData();\n  }, []);\n\n  return (\n    <Card\n      id=\"scrollableDiv\"\n      style={{\n        height: 600,\n        width: 320,\n        overflow: 'auto',\n      }}\n      size=\"small\"\n    >\n      <InfiniteScroll\n        dataLength={data.length}\n        next={loadMoreData}\n        hasMore={data.length < 50}\n        loader={\n          <div style={{ textAlign: 'center' }}>\n            <Spin indicator={<RedoOutlined spin />} size=\"small\" />\n          </div>\n        }\n        endMessage={<Divider plain>It is all, nothing more ü§ê</Divider>}\n        scrollableTarget=\"scrollableDiv\"\n        style={{ width: 270 }}\n      >\n        <Conversations items={data} defaultActiveKey=\"demo1\" groupable />\n      </InfiniteScroll>\n    </Card>\n  );\n};\n\nexport default App;\n","import '/Users/elvislee/Desktop/antd-workplace/x/components/conversations/demo/controlled-mode.tsx?watch=parent';import React, { useState } from 'react';\nimport { Card, type GetProp, Flex, Button } from 'antd';\nimport { Conversations, type ConversationsProps } from '@ant-design/x';\n\nconst items: GetProp<ConversationsProps, 'items'> = Array.from({ length: 3 }).map((_, index) => ({\n  key: `item${index + 1}`,\n  label: `Conversation Item ${index + 1}`,\n}));\n\nconst App = () => {\n  const [activeKey, setActiveKey] = useState<string>('item1');\n\n  return (\n    <Flex vertical gap=\"small\" align=\"flex-start\">\n      <Card style={{ width: 320 }} size=\"small\">\n        <Conversations\n          activeKey={activeKey}\n          onActiveChange={(v) => setActiveKey(v)}\n          items={items}\n        />\n      </Card>\n\n      <Flex gap=\"small\">\n        <Button\n          onClick={() => {\n            setActiveKey('item1');\n          }}\n        >\n          Active First\n        </Button>\n        <Button\n          onClick={() => {\n            setActiveKey('item3');\n          }}\n        >\n          Active Last\n        </Button>\n      </Flex>\n    </Flex>\n  );\n};\n\nexport default App;\n","import '/Users/elvislee/Desktop/antd-workplace/x/components/conversations/demo/group.tsx?watch=parent';import React from 'react';\nimport { Card, type GetProp } from 'antd';\nimport { Conversations, type ConversationsProps } from '@ant-design/x';\nimport { GithubOutlined, AlipayCircleOutlined, DockerOutlined } from '@ant-design/icons';\n\nconst items: GetProp<ConversationsProps, 'items'> = [\n  {\n    key: 'demo1',\n    label: 'What is Ant Design X ?',\n    icon: <GithubOutlined />,\n    group: 'Group1',\n  },\n  {\n    key: 'demo2',\n    label: (\n      <div>\n        Getting Started:{' '}\n        <a target=\"_blank\" href=\"https://ant-design.antgroup.com/index-cn\" rel=\"noreferrer\">\n          Ant Design !\n        </a>\n      </div>\n    ),\n    icon: <AlipayCircleOutlined />,\n    group: 'Group1',\n  },\n  {\n    key: 'demo4',\n    label: 'In Docker, use üêë Ollama and initialize',\n    icon: <DockerOutlined />,\n    group: 'Group2',\n  },\n  {\n    key: 'demo5',\n    label: 'Expired, please go to the recycle bin to check',\n    group: 'Group2',\n  },\n];\n\nconst App = () => (\n  <Card style={{ width: 320 }} size=\"small\">\n    <Conversations groupable defaultActiveKey=\"demo1\" items={items} />\n  </Card>\n);\n\nexport default App;\n","import '/Users/elvislee/Desktop/antd-workplace/x/components/conversations/demo/with-menu.tsx?watch=parent';import React from 'react';\nimport { Conversations } from '@ant-design/x';\nimport type { ConversationsProps } from '@ant-design/x';\nimport { EditOutlined, DeleteOutlined, StopOutlined } from '@ant-design/icons';\nimport { Card, type GetProp, App } from 'antd';\n\nconst items: GetProp<ConversationsProps, 'items'> = Array.from({ length: 4 }).map((_, index) => ({\n  key: `item${index + 1}`,\n  label: `Conversation Item ${index + 1}`,\n  disabled: index === 3,\n}));\n\nconst Demo = () => {\n  const { message } = App.useApp();\n\n  const menuConfig: ConversationsProps['menu'] = (conversation) => ({\n    items: [\n      {\n        label: 'Operation 1',\n        key: 'operation1',\n        icon: <EditOutlined />,\n      },\n      {\n        label: 'Operation 2',\n        key: 'operation2',\n        icon: <StopOutlined />,\n        disabled: true,\n      },\n      {\n        label: 'Operation 3',\n        key: 'operation3',\n        icon: <DeleteOutlined />,\n        danger: true,\n      },\n    ],\n    onClick: (menuInfo) => {\n      message.info(`Click ${conversation.key} - ${menuInfo.key}`);\n    },\n  });\n\n  return (\n    <Card style={{ width: 320 }} size=\"small\">\n      <Conversations menu={menuConfig} defaultActiveKey=\"demo3\" items={items} />\n    </Card>\n  );\n};\n\nexport default () => (\n  <App>\n    <Demo />\n  </App>\n);\n","import '/Users/elvislee/Desktop/antd-workplace/x/components/conversations/demo/group-sort.tsx?watch=parent';import React from 'react';\nimport { Card, Space, type GetProp } from 'antd';\nimport type { ConversationsProps } from '@ant-design/x';\nimport { Conversations } from '@ant-design/x';\nimport { GithubOutlined, AlipayCircleOutlined, DockerOutlined } from '@ant-design/icons';\n\nconst items: GetProp<ConversationsProps, 'items'> = [\n  {\n    key: 'demo1',\n    label: 'What is Ant Design X ?',\n    icon: <GithubOutlined />,\n    group: 'Pinned',\n  },\n  {\n    key: 'demo2',\n    label: (\n      <div>\n        Getting Started:{' '}\n        <a target=\"_blank\" href=\"https://ant-design.antgroup.com/index-cn\" rel=\"noreferrer\">\n          Ant Design !\n        </a>\n      </div>\n    ),\n    icon: <AlipayCircleOutlined />,\n    group: 'Pinned',\n  },\n  // ÈªòËÆ§ÂàÜÁªÑ\n  {\n    key: 'demo4',\n    label: 'In Docker, use üêë Ollama and initialize',\n    icon: <DockerOutlined />,\n  },\n  {\n    key: 'demo5',\n    label: 'Expired, please go to the recycle bin to check',\n    disabled: true,\n    group: 'Expired',\n  },\n];\n\nconst App = () => (\n  <Card style={{ width: 320 }} size=\"small\">\n    <Conversations\n      groupable={{\n        sort(a, b) {\n          if (a === b) return 0;\n\n          return a === 'Pinned' ? -1 : 1;\n        },\n        title: (group, { components: { GroupTitle } }) =>\n          group ? (\n            <GroupTitle>\n              <Space>üî•{group}</Space>\n            </GroupTitle>\n          ) : (\n            <GroupTitle />\n          ),\n      }}\n      defaultActiveKey=\"demo1\"\n      items={items}\n    />\n  </Card>\n);\n\nexport default App;\n","import '/Users/elvislee/Desktop/antd-workplace/x/components/conversations/demo/basic.tsx?watch=parent';import React from 'react';\nimport { Card } from 'antd';\nimport { Conversations } from '@ant-design/x';\nimport type { ConversationsProps } from '@ant-design/x';\nimport { GithubOutlined, AlipayCircleOutlined, DockerOutlined } from '@ant-design/icons';\nimport type { GetProp } from 'antd';\n\nconst items: GetProp<ConversationsProps, 'items'> = [\n  // Basic\n  {\n    key: 'item1',\n    label: 'What is Ant Design X?',\n    icon: <GithubOutlined />,\n  },\n  // label as ReactNode\n  {\n    key: 'item2',\n    label: (\n      <div>\n        Getting Started:{' '}\n        <a target=\"_blank\" href=\"https://ant-design.antgroup.com/index-cn\" rel=\"noreferrer\">\n          Ant Design !\n        </a>\n      </div>\n    ),\n    icon: <AlipayCircleOutlined />,\n  },\n  // Auto ellipsis\n  {\n    key: 'item3',\n    label: 'In Docker, use üêë Ollama and initialize',\n    icon: <DockerOutlined />,\n  },\n  // Disabled\n  {\n    key: 'item4',\n    label: 'Expired, please go to the recycle bin to check',\n    disabled: true,\n  },\n];\n\nconst App = () => (\n  <Card style={{ width: 320 }} size=\"small\">\n    <Conversations items={items} defaultActiveKey=\"item1\" />\n  </Card>\n);\n\nexport default App;\n"],"names":[],"mappings":"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"}