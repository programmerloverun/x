{"version":3,"sources":["docs/react/model-use-qwen.zh-CN.md?type=text"],"sourcesContent":["\n  import '/Users/elvislee/Desktop/antd-workplace/x/docs/react/model-use-qwen.zh-CN.md?watch=parent';\n  export const texts = [{\"value\":\"通义千问提供了兼容 OpenAI 的模型推理服务。\",\"paraId\":0},{\"value\":\"阿里云 - 通义千问\",\"paraId\":0},{\"value\":\"是指在接口设计和使用方式上与 OpenAI 的 API 保持一致的模型推理服务。\",\"paraId\":1,\"tocIndex\":0},{\"value\":\"这意味着开发者可以使用与调用 OpenAI 模型相同的代码和方法，来调用这些兼容服务，从而减少开发接入成本。\",\"paraId\":2,\"tocIndex\":0},{\"value\":\"该方式是 Ant Dssign X 提供的 \",\"paraId\":3,\"tocIndex\":1},{\"value\":\"在 React 环境下开箱即用的使用方式\",\"paraId\":3,\"tocIndex\":1},{\"value\":\"。\",\"paraId\":3,\"tocIndex\":1},{\"value\":\"import { useXAgent } from '@ant-design/x';\\n\\n// ... react env\\nconst [agent] = useXAgent({\\n  baseURL: 'https://dashscope.aliyuncs.com/compatible-mode/v1',\\n  model: 'qwen-plus',\\n  // 请谨慎在生产环境使用！\\n  dangerouslyApiKey: 'DASHSCOPE_API_KEY',\\n});\\n\\nfunction request() {\\n  agent.request(\\n    {\\n      // 对话消息\\n      messages: [\\n        {\\n          role: 'user',\\n          content: 'Hello',\\n        },\\n      ],\\n      // 是否流式渲染\\n      stream: true,\\n    },\\n    {\\n      // 成功回调\\n      onSuccess: (sseChunks) => {\\n        // 在请求完成时触发\\n        // 这里将得到已经解析好的 sseChunks\\n      },\\n      onError: (error) => {\\n        // 在请求异常时触发\\n      },\\n      onUpdate: (sse) => {\\n        // 在流更新时触发\\n        // 这里将得到已经解析好的 sse 对象\\n      },\\n    },\\n  );\\n}\\n\",\"paraId\":4,\"tocIndex\":1},{\"value\":\"该方式是 Ant Dssign X 提供的 \",\"paraId\":5,\"tocIndex\":2},{\"value\":\"在 JS 环境下开箱即用的使用方式\",\"paraId\":5,\"tocIndex\":2},{\"value\":\"。\",\"paraId\":5,\"tocIndex\":2},{\"value\":\"import { XRequest } from '@ant-design/x';\\n\\nconst xRequest = XRequest({\\n  baseURL: 'https://dashscope.aliyuncs.com/compatible-mode/v1',\\n  model: 'qwen-plus',\\n  // 请谨慎在生产环境使用！\\n  dangerouslyApiKey: 'DASHSCOPE_API_KEY',\\n});\\n\\nfunction request() {\\n  xRequest.create(\\n    {\\n      // 对话消息\\n      messages: [\\n        {\\n          role: 'user',\\n          content: 'Hello',\\n        },\\n      ],\\n      // 是否流式渲染\\n      stream: true,\\n    },\\n    {\\n      // 成功回调\\n      onSuccess: (sseChunks) => {\\n        // 在请求完成时触发\\n        // 这里将得到已经解析好的 sseChunks\\n      },\\n      onError: (error) => {\\n        // 在请求异常时触发\\n      },\\n      onUpdate: (sse) => {\\n        // 在流更新时触发\\n        // 这里将得到已经解析好的 sse 对象\\n      },\\n    },\\n  );\\n}\\n\",\"paraId\":6,\"tocIndex\":2}];\n  "],"names":[],"mappings":"+PAEe,6CAAA,QADN,YACA,IAAM,EAAQ,CAAC,CAAC,MAAQ,iHAA4B,OAAS,CAAC,EAAE,CAAC,MAAQ,gDAAa,OAAS,CAAC,EAAE,CAAC,MAAQ,kLAA2C,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,+RAAyD,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,4DAAyB,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,wFAAuB,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,SAAI,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,0lCAAkvB,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,4DAAyB,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,qFAAoB,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,SAAI,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,ykCAAiuB,OAAS,EAAE,SAAW,CAAC,EAAE"}